///////////////////////////////////////////////////////////////////////////////
//
// Тестирование основной функциональности пакета
// Проверка на соответствие выгрузки эталону
//
// (с) BIA Technologies, LLC
//
///////////////////////////////////////////////////////////////////////////////

#Использовать "..\src"
#Использовать logos
#Использовать asserts
#Использовать fs

///////////////////////////////////////////////////////////////////////////////

Функция ПолучитьСписокТестов(Знач ЮнитТестирование) Экспорт

	Лог = Логирование.ПолучитьЛог("Тест");

	МассивТестов = Новый Массив;
	МассивТестов.Добавить("ТестПроверкаВалидногоМодуля");
	МассивТестов.Добавить("ТестПроверкаНеВалидногоМодуля");

	МассивТестов.Добавить("ТестПроверкаВалиднойКонфигурации");
	МассивТестов.Добавить("ТестПроверкаНеВалиднойКонфигурации");

	Возврат МассивТестов;

КонецФункции


Процедура ПередЗапускомТеста() Экспорт

КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт

КонецПроцедуры

#Область Шаги_теста

Процедура ТестПроверкаВалидногоМодуля() Экспорт

	ОбщиеМодули = ОбъединитьПути(КаталогФикстур(), "configuration", "CommonModules");
	ФайлМодуля = ОбъединитьПути(ОбщиеМодули, "TestModule", "Ext", "Module.bsl");
	
	Генератор = Новый ГенераторДокументации(Неопределено);

	Модуль = ОбщегоНазначения.ОписаниеМодуля(ФайлМодуля);
	Ошибки = Генератор.ПроверитьФайл(Новый Структура("ОписаниеМодуля", Модуль));

	Ожидаем.Что(Ошибки, "Модуль не должен содержать ошибок").НЕ_().Заполнено();

КонецПроцедуры

Процедура ТестПроверкаВалиднойКонфигурации() Экспорт

	КаталогКонфигурации = ОбъединитьПути(КаталогФикстур(), "configuration");
	
	ГенераторДокументации = Новый ГенераторДокументации(Неопределено);

	Ошибки = ПроверитьКонфигурацию(КаталогКонфигурации);

	Ожидаем.Что(Ошибки, "Модуль не должен содержать ошибок").НЕ_().Заполнено();

КонецПроцедуры

Процедура ТестПроверкаНеВалиднойКонфигурации() Экспорт

	КаталогКонфигурации = ОбъединитьПути(КаталогФикстур(), "bad-configuration");
	
	ГенераторДокументации = Новый ГенераторДокументации(Неопределено);

	Ошибки = ПроверитьКонфигурацию(КаталогКонфигурации);

	ОшибкиТестовогоМодуля(Ошибки);

КонецПроцедуры

Процедура ТестПроверкаНеВалидногоМодуля() Экспорт

	ОбщиеМодули = ОбъединитьПути(КаталогФикстур(), "bad-configuration", "CommonModules");
	ФайлМодуля = ОбъединитьПути(ОбщиеМодули, "TestModule", "Ext", "Module.bsl");
	
	Генератор = Новый ГенераторДокументации(Неопределено);

	Модуль = ОбщегоНазначения.ОписаниеМодуля(ФайлМодуля);
	Ошибки = Генератор.ПроверитьФайл(Новый Структура("ОписаниеМодуля", Модуль));

	ОшибкиТестовогоМодуля(Ошибки);

КонецПроцедуры

#КонецОбласти

Процедура ОшибкиТестовогоМодуля(Ошибки)

	Префикс = "Должна быть ошибка ";
	Ожидаем.Что(Ошибки, "Модуль должен содержать ошибок").Заполнено();
	Ожидаем.Что(Ошибки, Префикс + "отсутствия описания метода").Содержит("У метода 'ТестоваяФункция' не заполнено описание");
	Ожидаем.Что(Ошибки, Префикс + "отсутствия описания параметра").Содержит("У метода 'ФункцияСПараметрами' не заполнено описание параметра №2 (Параметр2)");
	Ожидаем.Что(Ошибки, Префикс + "отсутствия описания параметра").Содержит("У метода 'ПроцедураСПараметрами' не заполнено описание параметра №1 (Параметр1)");
	Ожидаем.Что(Ошибки, Префикс + "отсутствия описания параметра").Содержит("У метода 'ПроцедураСПараметром' не заполнено описание параметра №1 (Параметр1)");

КонецПроцедуры

Функция КаталогФикстур()
	
	Возврат ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures");

КонецФункции

Функция ПараметрыРазбора(Путь)

	ФайлНастроек = ОбъединитьПути(КаталогФикстур(), "config.json");
	
	ПараметрыКоманды = Новый Структура;
	
	Файл = Новый Файл(Путь);
	
	Если Файл.ЭтоКаталог() Тогда
		ПараметрыКоманды.Вставить("КаталогИсходныхФайлов", Путь);
		ПараметрыКоманды.Вставить("КаталогКонфигурации", Путь);
	Иначе
		ПараметрыКоманды.Вставить("ИсходныйФайл", Путь);
	КонецЕсли;

	ПараметрыКоманды.Вставить("ФорматEDT", Ложь);
	ПараметрыКоманды.Вставить("РежимGit", Ложь);
	ПараметрыКоманды.Вставить("ГенерацияПриНаличииОшибок", Ложь);
	ПараметрыКоманды.Вставить("ФайлНастроек", ФайлНастроек);
	
	ОбщегоНазначения.ДополнитьПараметры(ПараметрыКоманды);
	
	Возврат ПараметрыКоманды;

КонецФункции

Функция ПроверитьКонфигурацию(КаталогКонфигурации)

	ПараметрыКоманды = ПараметрыРазбора(КаталогКонфигурации);

	Конфигурация = РазборКонфигураций.ЗагрузитьКонфигурацию(КаталогКонфигурации);
	Конфигурация.ЗаполнитьПодсистемыОбъектовКонфигурации();
	Конфигурация.НайтиМодули();

	НастройкиГенератора = Новый Структура;
	НастройкиГенератора.Вставить("Парсер", Конфигурация);
	НастройкиГенератора.Вставить("НастройкиАнализаИзменений", ПараметрыКоманды.НастройкиАнализаИзменений);

	ГенераторДокументации = Новый ГенераторДокументации(Неопределено);
	
	Возврат ГенераторДокументации.ПроверитьИсходники(НастройкиГенератора);
	
КонецФункции

