//////////////////////////////////////////////////////////////////////////////
//
// Служебный модуль с реализацией работы команды
//
///////////////////////////////////////////////////////////////////////////////

Процедура ОписаниеКоманды(КомандаПриложения) Экспорт

	КомандаПриложения.Аргумент("PATH", "",
						"Каталог исходных файлов конфигурации 1С.
						|При использовании опции -g (--git) нужно передавать каталог репозитория")
						.Обязательный(Истина);

	КомандаПриложения.Опция("config c", "",
						"Путь к конфигурационному файлу. По умолчанию ищет в каталоге исходных файлов");

	КомандаПриложения.Опция("git g", Ложь,
						"Включает режим обработки изменений репозитория git");

	КомандаПриложения.Опция("edt", Ложь,
						"Исходники хранятся в формате EDT");

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач КомандаПриложения) Экспорт

	ПараметрыКоманды = ПолучитьСтруктуруПараметров(КомандаПриложения);

	ТекстОшибки = "";
	Успешно = ВыполнитьПроверкуИсходников(ПараметрыКоманды, ТекстОшибки);

	Если НЕ Успешно Тогда

		МенеджерПриложения.ПолучитьЛог().Ошибка(ТекстОшибки);
		ЗавершитьРаботу(1);

	КонецЕсли;

КонецПроцедуры

// Возвращает имя команды приложения
Функция ИмяКоманды() Экспорт

	Возврат "check";

КонецФункции // ИмяКоманды

// Возвращает описание исполняемой команды
Функция КраткоеОписаниеКоманды() Экспорт

	Возврат "Выполняет проверку исходных файлов на соответствие требованиям к описаниям";

КонецФункции // ОписаниеКоманды

#Область Служебные

Функция ПолучитьСтруктуруПараметров(Знач КомандаПриложения)

	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("КаталогИсходныхФайлов", КомандаПриложения.ЗначениеАргумента("PATH"));
	ПараметрыКоманды.Вставить("ФорматEDT", КомандаПриложения.ЗначениеОпции("edt"));
	ПараметрыКоманды.Вставить("РежимGit", КомандаПриложения.ЗначениеОпции("git"));
	ПараметрыКоманды.Вставить("ФайлНастроек", КомандаПриложения.ЗначениеОпции("config"));
	
	Возврат ПараметрыКоманды;

КонецФункции

Функция ВыполнитьПроверкуИсходников(ПараметрыКоманды, ТекстОшибки)

	ОбщегоНазначения.ПроверитьПараметрыКоманды(ПараметрыКоманды);
	
	ОбщегоНазначения.ДополнитьПараметры(ПараметрыКоманды);

	КаталогИсходныхФайлов 		= ПараметрыКоманды.КаталогИсходныхФайлов;

	ТекущийКаталогИсходныхФайлов = ОбщегоНазначения.ПолноеИмяФайла(ПараметрыКоманды.КаталогКонфигурации);

	Конфигурация = РазборКонфигураций.ЗагрузитьКонфигурацию(ТекущийКаталогИсходныхФайлов);
	Конфигурация.ЗаполнитьПодсистемыОбъектовКонфигурации();
	Конфигурация.НайтиМодули();

	НастройкиГенератора = Новый Структура;
	НастройкиГенератора.Вставить("Парсер", Конфигурация);
	НастройкиГенератора.Вставить("НастройкиАнализаИзменений", ПараметрыКоманды.НастройкиАнализаИзменений);

	ГенераторДокументации = Новый ГенераторДокументации(Неопределено);

	ОшибкиГенерации = ГенераторДокументации.ПроверитьИсходники(НастройкиГенератора);

	Если НЕ ПустаяСтрока(ОшибкиГенерации) Тогда
		ТекстОшибки = "Проверка исходников завершилась с ошибкой: " + ОшибкиГенерации;
	КонецЕсли;

	Возврат ПустаяСтрока(ТекстОшибки);

КонецФункции

#КонецОбласти
