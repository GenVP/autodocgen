//////////////////////////////////////////////////////////////////////////////
//
// Служебный модуль с реализацией работы команды
//
///////////////////////////////////////////////////////////////////////////////

Процедура ОписаниеКоманды(КомандаПриложения) Экспорт
	
	КомандаПриложения.Аргумент("PATH", "",
			"Исходный файл, для которого необходимо сгенерировать документацию")
			.Обязательный(Истина);
	
	КомандаПриложения.Опция("format f", "html",
						"Формат генерации документации. Поддерживается confluence, html, json, markdown")
						.ТПеречисление()
						.Перечисление("html", "html", "Документация в формате html")
						.Перечисление("json", "JSON", "Документация в формате JSON")
						.Перечисление("markdown", "Markdown", "Документация в формате Markdown");

	КомандаПриложения.Опция("config c", "",
			"Путь к конфигурационному файлу. По умолчанию ищет в каталоге с исходным файлом");
	
	КомандаПриложения.Опция("git g", Ложь,
			"Включает режим обработки изменений репозитория git");
	
	КомандаПриложения.Опция("errno e", Ложь,
			"Выполняет генерацию даже при наличии ошибок");
	
	КомандаПриложения.Опция("edt", Ложь,
			"Исходники хранятся в формате EDT");

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач КомандаПриложения) Экспорт
	
	ПараметрыКоманды = ПолучитьСтруктуруПараметров(КомандаПриложения);
	
	ТекстОшибки = "";
	Успешно = ВыполнитьГенерациюДокументации(ПараметрыКоманды, ТекстОшибки);
	
	Если НЕ Успешно Тогда
		
		МенеджерПриложения.ПолучитьЛог().Ошибка(ТекстОшибки);
		ЗавершитьРаботу(1);

	КонецЕсли;

КонецПроцедуры

// Возвращает имя команды приложения
Функция ИмяКоманды() Экспорт
	
	Возврат "alone";
	
КонецФункции // ИмяКоманды

// Возвращает описание исполняемой команды
Функция КраткоеОписаниеКоманды() Экспорт
	
	Возврат "Выполняет генерацию документации указанного файла";
	
КонецФункции

#Область Служебные

Функция ПолучитьСтруктуруПараметров(Знач КомандаПриложения)
	
	ПараметрыКоманды = Новый Структура;
	ПараметрыКоманды.Вставить("ИсходныйФайл", КомандаПриложения.ЗначениеАргумента("PATH"));
	ПараметрыКоманды.Вставить("Формат", КомандаПриложения.ЗначениеОпции("format"));
	ПараметрыКоманды.Вставить("ФорматEDT", КомандаПриложения.ЗначениеОпции("edt"));
	ПараметрыКоманды.Вставить("РежимGit", КомандаПриложения.ЗначениеОпции("git"));
	ПараметрыКоманды.Вставить("ГенерацияПриНаличииОшибок", КомандаПриложения.ЗначениеОпции("errno"));
	ПараметрыКоманды.Вставить("ФайлНастроек", КомандаПриложения.ЗначениеОпции("config"));
	
	Возврат ПараметрыКоманды;
	
КонецФункции

Функция ВыполнитьГенерациюДокументации(ПараметрыКоманды, ТекстОшибки) Экспорт
	
	ИсходныйФайл = ПараметрыКоманды.ИсходныйФайл;
	
	ОбщегоНазначения.ПроверитьПараметрыКоманды(ПараметрыКоманды);
	
	ОбщегоНазначения.ДополнитьПараметры(ПараметрыКоманды);

	Модуль = ОбщегоНазначения.ОписаниеМодуля(ИсходныйФайл);

	НастройкиГенератора = Новый Структура;
	
	НастройкиГенератора.Вставить("ОписаниеМодуля", Модуль);
	НастройкиГенератора.Вставить("НастройкиАнализаИзменений", ПараметрыКоманды.НастройкиАнализаИзменений);
	
	ГенераторСодержимого = ОбщегоНазначения.ПолучитьГенераторДокументации(
		ПараметрыКоманды.НастройкиСтенда,
		ПараметрыКоманды.Формат);

	ГенераторДокументации = Новый ГенераторДокументации(ГенераторСодержимого);

	РезультатГенерации = ГенераторДокументации.СгенерироватьПоФайлу(НастройкиГенератора);
		
	ЕстьОшибкиГенерации = НЕ РезультатГенерации.Успешно;

	ОшибкиГенерации = СтрСоединить(РезультатГенерации.Ошибки, Символы.ПС);
	ОшибкиПубликации = "";

	Если ПараметрыКоманды.ГенерацияПриНаличииОшибок ИЛИ НЕ ЕстьОшибкиГенерации Тогда
		
		РезультатПубликации = ГенераторДокументации.Опубликовать(РезультатГенерации);
		ОшибкиПубликации = СтрСоединить(РезультатПубликации.ОшибкиПубликации, Символы.ПС);

	КонецЕсли;

	Если ЕстьОшибкиГенерации Тогда
		ТекстОшибки = "Генерация документации завершилась ошибкой: " + ОшибкиГенерации;
	КонецЕсли;

	Если НЕ ПустаяСтрока(ОшибкиПубликации) Тогда
		ТекстОшибки = ТекстОшибки + Символы.ПС + "Публикация документации завершилась ошибкой: " + ОшибкиПубликации;
	КонецЕсли;

	Возврат ПустаяСтрока(ТекстОшибки);

КонецФункции

#КонецОбласти
